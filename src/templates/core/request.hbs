{{~#equals @root.httpClient 'fetch'}}{{>fetch/request}}{{/equals~}}
{{~#equals @root.httpClient 'xhr'}}{{>xhr/request}}{{/equals~}}
{{~#equals @root.httpClient 'node'}}{{>node/request}}{{/equals~}}

//

import Ajv from 'ajv';

export function checkJsonSchema(operationId: string, schemas: any, result: ApiResult):ApiError|boolean {
  let operation = schemas[operationId];
  if(!operation) {
    return false;
  }
  let responses = operation['responses'];
  if(!responses) {
    return false;
  }
  let code = result.status;
  let r = responses[code.toString()];
  if(!r) {
    return false;
  }

  const ajv = new Ajv({schemaId: 'id'});
  ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-04.json'));
  const validator = ajv.compile(r);
  const valid = validator(result.body);
  if(!valid) {
    return new ApiError(result, "json schema check failed", validator.errors);
  }

  return true;
}
